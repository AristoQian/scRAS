simu<-splatter::splatSimulate(group.prob=c(0.9, 0.1), method="group",
                              verbos=F, batchCells=1000, de.prob=c(0.4, 0.4), out.prob=0, de.facLoc=0.4, de.facScale=0.8, nGenes=5000)
group2.indic<-which(simu@colData@listData$Group == as.character("Group2"))
group1.indic<-which(simu@colData@listData$Group == as.character("Group1"))
simu.count<-simu@assays@data@listData$counts

gene.fltd.indic<-sapply(1:dim(simu.count)[1],function(x){
  if(length(which(simu.count[x,]>=2))>=6){return(1)}
  else{return(0)}
})

simu.count.fltd<-simu.count[which(gene.fltd.indic == 1),]
  #simu.count[which(rowSums(matrix(as.integer(as.logical(simu.count)),
  #                                     nrow=dim(simu.count)[1],ncol=dim(simu.count)[2]))>floor(0.1*dim(simu.count)[2])),]
log.trans.simu.count.fltd<-log(simu.count.fltd+1)
simu.count.fltd.group2<-simu.count.fltd[,group2.indic]
simu.count.fltd.group1<-simu.count.fltd[,setdiff(1:dim(simu.count.fltd)[2],group2.indic)]
log.trans.simu.count.fltd.group2<-log.trans.simu.count.fltd[,group2.indic]
log.trans.simu.count.fltd.group1<-log.trans.simu.count.fltd[,setdiff(1:dim(simu.count.fltd)[2],group2.indic)]

p.value.simu.de<-sapply(1:dim(log.trans.simu.count.fltd)[1],function(x){
  return(wilcox.test(log.trans.simu.count.fltd.group1[x,],log.trans.simu.count.fltd.group2[x,])$p.value)
})
LFC<-sapply(1:dim(log.trans.simu.count.fltd)[1], function(x){
  mu1 = mean(log.trans.simu.count.fltd.group1[x,])
  mu2 = mean(log.trans.simu.count.fltd.group2[x,])
  fold.change<-max(mu1/mu2,mu2/mu1)-1
  return(fold.change)
})
FDR.simu.de<-p.adjust(p.value.simu.de, method = 'hochberg', n = length(p.value.simu.de))

DE.indic<-sapply(1:dim(simu.count.fltd)[1],function(x){
  if(LFC[x]>=2.32 && FDR.simu.de[x]<0.05){return("DE")}
  if(p.value.simu.de[x]>=0.05){return("non-DE")}
  else{return("Neither")}
})

geneid.rplcd.de1<-replace(which(DE.indic == "non-DE"), sample(1:length(which(DE.indic == "non-DE")),1),which(DE.indic == "DE"))
geneid.rplcd.de10<-replace(which(DE.indic == "non-DE"), sample(1:length(which(DE.indic == "non-DE")),10),which(DE.indic == "DE"))
geneid.rplcd.de25<-replace(which(DE.indic == "non-DE"), sample(1:length(which(DE.indic == "non-DE")),25),which(DE.indic == "DE"))
geneid.rplcd.de35<-replace(which(DE.indic == "non-DE"), sample(1:length(which(DE.indic == "non-DE")),35),which(DE.indic == "DE"))
geneid.rplcd.de50<-replace(which(DE.indic == "non-DE"), sample(1:length(which(DE.indic == "non-DE")),50),which(DE.indic == "DE"))
geneid.rplcd.de65<-replace(which(DE.indic == "non-DE"), sample(1:length(which(DE.indic == "non-DE")),65),which(DE.indic == "DE"))
geneid.rplcd.de80<-replace(which(DE.indic == "non-DE"), sample(1:length(which(DE.indic == "non-DE")),80),which(DE.indic == "DE"))
geneid.rplcd.de100<-replace(which(DE.indic == "non-DE"), sample(1:length(which(DE.indic == "non-DE")),100),which(DE.indic == "DE"))
geneid.rplcd.de120<-replace(which(DE.indic == "non-DE"), sample(1:length(which(DE.indic == "non-DE")),120),which(DE.indic == "DE"))
geneid.rplcd.de140<-replace(which(DE.indic == "non-DE"), sample(1:length(which(DE.indic == "non-DE")),140),which(DE.indic == "DE"))

geneid.rplcd.de<-list()
for(x in c(1,5,10,15,20,25,30,35,40,45,50,55,60,65,80,100,120,140)){
  geneid.rplcd.de[[x]]<-replace(which(DE.indic == "non-DE"), sample(1:length(which(DE.indic == "non-DE")),x),which(DE.indic == "DE"))
}
for(x in c(2,3,4)){
  geneid.rplcd.de[[x]]<-replace(which(DE.indic == "non-DE"), sample(1:length(which(DE.indic == "non-DE")),x),which(DE.indic == "DE"))
}

ano.scores.simu<-list()
dev.scores.simu<-list()
mod.simu.count<-list()
mod.simu.pc<-list()
tsne.simu<-list()
for(x in c(1,5,10,15,20,25,30,35,40,45,50,55,60,65,80,100,120,140)){
  mod.simu.count[[x]]<-simu.count.fltd[geneid.rplcd.de[[x]],]
  mod.simu.pc[[x]]<-prcomp(t(mod.simu.count[[x]]))$x[,1:25]
  ano.scores.simu[[x]]<-rare.cell.scores(feature.mat = mod.simu.pc[[x]],return = "Anomalous")
}
for(x in c(1,2,3,4,5,10,15,20,25,30,35,40,45,50,55,60,65,80,100,120,140)){
  ano.scores.simu[[x]]<-scores(feature.mat = mod.simu.pc[[x]], K = 20)$CAS
}
for(x in c(2,3,4)){
  mod.simu.count[[x]]<-simu.count.fltd[geneid.rplcd.de[[x]],]
  mod.simu.pc[[x]]<-prcomp(t(mod.simu.count[[x]]))$x[,1:25]
  ano.scores.simu[[x]]<-rare.cell.scores(feature.mat = mod.simu.pc[[x]],return = "Anomalous")
}
for(x in c(1,5,10,15,20,25,30,35,40,45,50,55,60,65,80,100,120,140)){
  dev.scores.simu[[x]]<-rare.cell.scores(feature.mat = mod.simu.pc[[x]],return = "CSD")
}
for(x in c(2,3,4)){
  dev.scores.simu[[x]]<-rare.cell.scores(feature.mat = mod.simu.pc[[x]],return = "CSD")
}

for(x in c(1,5,10,15,20,25,30,35,40,45,50,55,60,65,80,100,120,140)){
  tsne.simu[[x]]<-Rtsne::Rtsne(mod.simu.pc[[x]])
}
for(x in c(2,3,4)){
  tsne.simu[[x]]<-Rtsne::Rtsne(mod.simu.pc[[x]])
}
FiRE.scores<-list()
library(FiRE)
for(x in c(1,2,3,4,5)){
  L <- 100 # Number of estimators
  M <- 50 # Dims to be sampled

  # Model creation without optional parameter
  model <- new(FiRE::FiRE, L, M)

  ## There are 3 more optional parameters they can be passed as
  ## model <- new(FiRE::FiRE, L, M, H, seed, verbose)

  ## Hashing all samples
  model$fit(mod.simu.pc[[x]])

  ## Computing score of each sample
  FiRE.scores[[x]] <- model$score(mod.simu.pc[[x]])
}
for(x in c(10,15,20,25,30)){
  L <- 100 # Number of estimators
  M <- 50 # Dims to be sampled

  # Model creation without optional parameter
  model <- new(FiRE::FiRE, L, M)

  ## There are 3 more optional parameters they can be passed as
  ## model <- new(FiRE::FiRE, L, M, H, seed, verbose)

  ## Hashing all samples
  model$fit(mod.simu.pc[[x]])

  ## Computing score of each sample
  FiRE.scores[[x]] <- model$score(mod.simu.pc[[x]])
}
for(x in c(35,40,45,50,55)){
  L <- 100 # Number of estimators
  M <- 50 # Dims to be sampled

  # Model creation without optional parameter
  model <- new(FiRE::FiRE, L, M)

  ## There are 3 more optional parameters they can be passed as
  ## model <- new(FiRE::FiRE, L, M, H, seed, verbose)

  ## Hashing all samples
  model$fit(mod.simu.pc[[x]])

  ## Computing score of each sample
  FiRE.scores[[x]] <- model$score(mod.simu.pc[[x]])
}
gc()
for(x in c(60,65,80,100,120)){
  L <- 100 # Number of estimators
  M <- 50 # Dims to be sampled

  # Model creation without optional parameter
  model <- new(FiRE::FiRE, L, M)

  ## There are 3 more optional parameters they can be passed as
  ## model <- new(FiRE::FiRE, L, M, H, seed, verbose)

  ## Hashing all samples
  model$fit(mod.simu.pc[[x]])

  ## Computing score of each sample
  FiRE.scores[[x]] <- model$score(mod.simu.pc[[x]])
}
gc()
for(x in c(140)){
  L <- 100 # Number of estimators
  M <- 50 # Dims to be sampled

  # Model creation without optional parameter
  model <- new(FiRE::FiRE, L, M)

  ## There are 3 more optional parameters they can be passed as
  ## model <- new(FiRE::FiRE, L, M, H, seed, verbose)

  ## Hashing all samples
  model$fit(mod.simu.pc[[x]])

  ## Computing score of each sample
  FiRE.scores[[x]] <- model$score(mod.simu.pc[[x]])
}
gc()
for(x in c(30)){
  L <- 100 # Number of estimators
  M <- 50 # Dims to be sampled

  # Model creation without optional parameter
  model <- new(FiRE::FiRE, L, M)

  ## There are 3 more optional parameters they can be passed as
  ## model <- new(FiRE::FiRE, L, M, H, seed, verbose)

  ## Hashing all samples
  model$fit(mod.simu.pc[[x]])

  ## Computing score of each sample
  FiRE.scores[[x]] <- model$score(mod.simu.pc[[x]])
}
gc()
for(x in c(1,2,3,4,5,10,15,20,25,30,35,40,45,50,55,60,65,80,100,120,140)){
  FiRE.scores[[x]]<-stardardize(FiRE.scores[[x]])
}
boxplot(ano.scores.simu[[5]][group2.indic],ano.scores.simu[[5]][group1.indic])
boxplot(ano.scores.simu[[10]][group2.indic],ano.scores.simu[[10]][group1.indic])
boxplot(ano.scores.simu[[15]][group2.indic],ano.scores.simu[[15]][group1.indic])
boxplot(ano.scores.simu[[20]][group2.indic],ano.scores.simu[[20]][group1.indic])
boxplot(ano.scores.simu[[25]][group2.indic],ano.scores.simu[[25]][group1.indic])
boxplot(ano.scores.simu[[30]][group2.indic],ano.scores.simu[[30]][group1.indic])
boxplot(ano.scores.simu[[35]][group2.indic],ano.scores.simu[[35]][group1.indic])
boxplot(ano.scores.simu[[40]][group2.indic],ano.scores.simu[[40]][group1.indic])
boxplot(ano.scores.simu[[45]][group2.indic],ano.scores.simu[[45]][group1.indic])
boxplot(ano.scores.simu[[50]][group2.indic],ano.scores.simu[[50]][group1.indic])
boxplot(ano.scores.simu[[55]][group2.indic],ano.scores.simu[[55]][group1.indic])
boxplot(ano.scores.simu[[60]][group2.indic],ano.scores.simu[[60]][group1.indic])
boxplot(ano.scores.simu[[65]][group2.indic],ano.scores.simu[[65]][group1.indic])
boxplot(ano.scores.simu[[140]][group2.indic],ano.scores.simu[[140]][group1.indic])

df.box<-data.frame(CAS = c(ano.scores.simu[[1]][group2.indic],ano.scores.simu[[1]][group1.indic],
                           ano.scores.simu[[2]][group2.indic],ano.scores.simu[[2]][group1.indic],
                           ano.scores.simu[[3]][group2.indic],ano.scores.simu[[3]][group1.indic],
                           ano.scores.simu[[4]][group2.indic],ano.scores.simu[[4]][group1.indic],
                           ano.scores.simu[[5]][group2.indic],ano.scores.simu[[5]][group1.indic],
                           ano.scores.simu[[10]][group2.indic],ano.scores.simu[[10]][group1.indic],
                           ano.scores.simu[[15]][group2.indic],ano.scores.simu[[15]][group1.indic],
                           ano.scores.simu[[20]][group2.indic],ano.scores.simu[[20]][group1.indic],
                           ano.scores.simu[[25]][group2.indic],ano.scores.simu[[25]][group1.indic],
                           ano.scores.simu[[30]][group2.indic],ano.scores.simu[[30]][group1.indic],
                           ano.scores.simu[[35]][group2.indic],ano.scores.simu[[35]][group1.indic],
                           ano.scores.simu[[40]][group2.indic],ano.scores.simu[[40]][group1.indic],
                           ano.scores.simu[[45]][group2.indic],ano.scores.simu[[45]][group1.indic],
                           ano.scores.simu[[50]][group2.indic],ano.scores.simu[[50]][group1.indic],
                           ano.scores.simu[[55]][group2.indic],ano.scores.simu[[55]][group1.indic],
                           ano.scores.simu[[60]][group2.indic],ano.scores.simu[[60]][group1.indic],
                           ano.scores.simu[[65]][group2.indic],ano.scores.simu[[65]][group1.indic],
                           ano.scores.simu[[80]][group2.indic],ano.scores.simu[[80]][group1.indic],
                           ano.scores.simu[[100]][group2.indic],ano.scores.simu[[100]][group1.indic],
                           ano.scores.simu[[120]][group2.indic],ano.scores.simu[[120]][group1.indic],
                           ano.scores.simu[[140]][group2.indic],ano.scores.simu[[140]][group1.indic]),
                   CSD = c(dev.scores.simu[[1]][group2.indic],dev.scores.simu[[1]][group1.indic],
                           dev.scores.simu[[2]][group2.indic],dev.scores.simu[[2]][group1.indic],
                           dev.scores.simu[[3]][group2.indic],dev.scores.simu[[3]][group1.indic],
                           dev.scores.simu[[4]][group2.indic],dev.scores.simu[[4]][group1.indic],
                           dev.scores.simu[[5]][group2.indic],dev.scores.simu[[5]][group1.indic],
                           dev.scores.simu[[10]][group2.indic],dev.scores.simu[[10]][group1.indic],
                           dev.scores.simu[[15]][group2.indic],dev.scores.simu[[15]][group1.indic],
                           dev.scores.simu[[20]][group2.indic],dev.scores.simu[[20]][group1.indic],
                           dev.scores.simu[[25]][group2.indic],dev.scores.simu[[25]][group1.indic],
                           dev.scores.simu[[30]][group2.indic],dev.scores.simu[[30]][group1.indic],
                           dev.scores.simu[[35]][group2.indic],dev.scores.simu[[35]][group1.indic],
                           dev.scores.simu[[40]][group2.indic],dev.scores.simu[[40]][group1.indic],
                           dev.scores.simu[[45]][group2.indic],dev.scores.simu[[45]][group1.indic],
                           dev.scores.simu[[50]][group2.indic],dev.scores.simu[[50]][group1.indic],
                           dev.scores.simu[[55]][group2.indic],dev.scores.simu[[55]][group1.indic],
                           dev.scores.simu[[60]][group2.indic],dev.scores.simu[[60]][group1.indic],
                           dev.scores.simu[[65]][group2.indic],dev.scores.simu[[65]][group1.indic],
                           dev.scores.simu[[80]][group2.indic],dev.scores.simu[[80]][group1.indic],
                           dev.scores.simu[[100]][group2.indic],dev.scores.simu[[100]][group1.indic],
                           dev.scores.simu[[120]][group2.indic],dev.scores.simu[[120]][group1.indic],
                           dev.scores.simu[[140]][group2.indic],dev.scores.simu[[140]][group1.indic]),
                   RS = c(FiRE.scores[[1]][group2.indic],FiRE.scores[[1]][group1.indic],
                          FiRE.scores[[2]][group2.indic],FiRE.scores[[2]][group1.indic],
                          FiRE.scores[[3]][group2.indic],FiRE.scores[[3]][group1.indic],
                          FiRE.scores[[4]][group2.indic],FiRE.scores[[4]][group1.indic],
                          FiRE.scores[[5]][group2.indic],FiRE.scores[[5]][group1.indic],
                          FiRE.scores[[10]][group2.indic],FiRE.scores[[10]][group1.indic],
                          FiRE.scores[[15]][group2.indic],FiRE.scores[[15]][group1.indic],
                          FiRE.scores[[20]][group2.indic],FiRE.scores[[20]][group1.indic],
                          FiRE.scores[[25]][group2.indic],FiRE.scores[[25]][group1.indic],
                          FiRE.scores[[30]][group2.indic],FiRE.scores[[30]][group1.indic],
                          FiRE.scores[[35]][group2.indic],FiRE.scores[[35]][group1.indic],
                          FiRE.scores[[40]][group2.indic],FiRE.scores[[40]][group1.indic],
                          FiRE.scores[[45]][group2.indic],FiRE.scores[[45]][group1.indic],
                          FiRE.scores[[50]][group2.indic],FiRE.scores[[50]][group1.indic],
                          FiRE.scores[[55]][group2.indic],FiRE.scores[[55]][group1.indic],
                          FiRE.scores[[60]][group2.indic],FiRE.scores[[60]][group1.indic],
                          FiRE.scores[[65]][group2.indic],FiRE.scores[[65]][group1.indic],
                          FiRE.scores[[80]][group2.indic],FiRE.scores[[80]][group1.indic],
                          FiRE.scores[[100]][group2.indic],FiRE.scores[[100]][group1.indic],
                          FiRE.scores[[120]][group2.indic],FiRE.scores[[120]][group1.indic],
                          FiRE.scores[[140]][group2.indic],FiRE.scores[[140]][group1.indic]),
                   type = rep(c(rep("Cell Type 2", length(group2.indic)),rep("Cell Type 1", length(group1.indic))),21),
                   de_gene_num = as.factor(c(rep(1,dim(simu.count.fltd)[2]),
                                             rep(2,dim(simu.count.fltd)[2]),
                                             rep(3,dim(simu.count.fltd)[2]),
                                             rep(4,dim(simu.count.fltd)[2]),
                                           rep(5,dim(simu.count.fltd)[2]),
                                   rep(10,dim(simu.count.fltd)[2]),
                                   rep(15,dim(simu.count.fltd)[2]),
                                   rep(20,dim(simu.count.fltd)[2]),
                                   rep(25,dim(simu.count.fltd)[2]),
                                   rep(30,dim(simu.count.fltd)[2]),
                                   rep(35,dim(simu.count.fltd)[2]),
                                   rep(40,dim(simu.count.fltd)[2]),
                                   rep(45,dim(simu.count.fltd)[2]),
                                   rep(50,dim(simu.count.fltd)[2]),
                                   rep(55,dim(simu.count.fltd)[2]),
                                   rep(60,dim(simu.count.fltd)[2]),
                                   rep(65,dim(simu.count.fltd)[2]),
                                   rep(80,dim(simu.count.fltd)[2]),
                                   rep(100,dim(simu.count.fltd)[2]),
                                   rep(120,dim(simu.count.fltd)[2]),
                                   rep(140,dim(simu.count.fltd)[2]))))

df.tsne<-data.frame(tsne1 = c(tsne.simu[[1]]$Y[c(group2.indic,group1.indic),1],
                              tsne.simu[[2]]$Y[c(group2.indic,group1.indic),1],
                              tsne.simu[[3]]$Y[c(group2.indic,group1.indic),1],
                              tsne.simu[[4]]$Y[c(group2.indic,group1.indic),1],
                              tsne.simu[[5]]$Y[c(group2.indic,group1.indic),1],
                              tsne.simu[[10]]$Y[c(group2.indic,group1.indic),1],
                              tsne.simu[[15]]$Y[c(group2.indic,group1.indic),1],
                              tsne.simu[[20]]$Y[c(group2.indic,group1.indic),1],
                              tsne.simu[[25]]$Y[c(group2.indic,group1.indic),1],
                              tsne.simu[[30]]$Y[c(group2.indic,group1.indic),1],
                              tsne.simu[[35]]$Y[c(group2.indic,group1.indic),1],
                              tsne.simu[[40]]$Y[c(group2.indic,group1.indic),1],
                              tsne.simu[[45]]$Y[c(group2.indic,group1.indic),1],
                              tsne.simu[[50]]$Y[c(group2.indic,group1.indic),1],
                              tsne.simu[[55]]$Y[c(group2.indic,group1.indic),1],
                              tsne.simu[[60]]$Y[c(group2.indic,group1.indic),1],
                              tsne.simu[[65]]$Y[c(group2.indic,group1.indic),1],
                              tsne.simu[[80]]$Y[c(group2.indic,group1.indic),1],
                              tsne.simu[[100]]$Y[c(group2.indic,group1.indic),1],
                              tsne.simu[[120]]$Y[c(group2.indic,group1.indic),1],
                              tsne.simu[[140]]$Y[c(group2.indic,group1.indic),1]),
                    tsne2 = c(tsne.simu[[1]]$Y[c(group2.indic,group1.indic),2],
                              tsne.simu[[2]]$Y[c(group2.indic,group1.indic),2],
                              tsne.simu[[3]]$Y[c(group2.indic,group1.indic),2],
                              tsne.simu[[4]]$Y[c(group2.indic,group1.indic),2],
                              tsne.simu[[5]]$Y[c(group2.indic,group1.indic),2],
                              tsne.simu[[10]]$Y[c(group2.indic,group1.indic),2],
                              tsne.simu[[15]]$Y[c(group2.indic,group1.indic),2],
                              tsne.simu[[20]]$Y[c(group2.indic,group1.indic),2],
                              tsne.simu[[25]]$Y[c(group2.indic,group1.indic),2],
                              tsne.simu[[30]]$Y[c(group2.indic,group1.indic),2],
                              tsne.simu[[35]]$Y[c(group2.indic,group1.indic),2],
                              tsne.simu[[40]]$Y[c(group2.indic,group1.indic),2],
                              tsne.simu[[45]]$Y[c(group2.indic,group1.indic),2],
                              tsne.simu[[50]]$Y[c(group2.indic,group1.indic),2],
                              tsne.simu[[55]]$Y[c(group2.indic,group1.indic),2],
                              tsne.simu[[60]]$Y[c(group2.indic,group1.indic),2],
                              tsne.simu[[65]]$Y[c(group2.indic,group1.indic),2],
                              tsne.simu[[80]]$Y[c(group2.indic,group1.indic),2],
                              tsne.simu[[100]]$Y[c(group2.indic,group1.indic),2],
                              tsne.simu[[120]]$Y[c(group2.indic,group1.indic),2],
                              tsne.simu[[140]]$Y[c(group2.indic,group1.indic),2]),
                    type = rep(c(rep("Cell Type 2", length(group2.indic)),rep("Cell Type 1", length(group1.indic))),21),
                    de_gene_num = as.factor(c(rep(1,dim(simu.count.fltd)[2]),
                                              rep(2,dim(simu.count.fltd)[2]),
                                              rep(3,dim(simu.count.fltd)[2]),
                                              rep(4,dim(simu.count.fltd)[2]),
                                              rep(5,dim(simu.count.fltd)[2]),
                                              rep(10,dim(simu.count.fltd)[2]),
                                              rep(15,dim(simu.count.fltd)[2]),
                                              rep(20,dim(simu.count.fltd)[2]),
                                              rep(25,dim(simu.count.fltd)[2]),
                                              rep(30,dim(simu.count.fltd)[2]),
                                              rep(35,dim(simu.count.fltd)[2]),
                                              rep(40,dim(simu.count.fltd)[2]),
                                              rep(45,dim(simu.count.fltd)[2]),
                                              rep(50,dim(simu.count.fltd)[2]),
                                              rep(55,dim(simu.count.fltd)[2]),
                                              rep(60,dim(simu.count.fltd)[2]),
                                              rep(65,dim(simu.count.fltd)[2]),
                                              rep(80,dim(simu.count.fltd)[2]),
                                              rep(100,dim(simu.count.fltd)[2]),
                                              rep(120,dim(simu.count.fltd)[2]),
                                              rep(140,dim(simu.count.fltd)[2]))))
library(ggpubr)
theme.fig.box<-theme(panel.background = element_blank(),
                     axis.title = element_text(colour = "black",lineheight  = rel(2),size = 15),
                     axis.line = element_line(colour = "black",linewidth = rel(1.5)),
                     axis.text = element_text(colour = "black",lineheight  = rel(2),size = 12))

plt.simu1<-ggplot(df.tsne%>%filter(de_gene_num == 1),aes(x= tsne1, y = tsne2))+geom_point(aes(color = type))+xlab("t-SNE 1")+ylab("t-SNE 2")+theme.fig.box+ggtitle("1 DE Gene")
plt.simu5<-ggplot(df.tsne%>%filter(de_gene_num == 5),aes(x= tsne1, y = tsne2))+geom_point(aes(color = type))+xlab("t-SNE 1")+ylab("t-SNE 2")+theme.fig.box+ggtitle("5 DE Genes")
plt.simu20<-ggplot(df.tsne%>%filter(de_gene_num == 20),aes(x= tsne1, y = tsne2))+geom_point(aes(color = type))+xlab("t-SNE 1")+ylab("t-SNE 2")+theme.fig.box+ggtitle("20 DE Gene")
plt.simu80<-ggplot(df.tsne%>%filter(de_gene_num == 80),aes(x= tsne1, y = tsne2))+geom_point(aes(color = type))+xlab("t-SNE 1")+ylab("t-SNE 2")+theme.fig.box+ggtitle("80 DE Gene")
plt.tsne.simu<-plot_grid(plt.simu1,plt.simu5,plt.simu20,plt.simu80,ncol= 4,labels = LETTERS[1:4])

plt.cas<-ggplot(df.box, aes(x = de_gene_num, y = CAS))+geom_boxplot(aes(fill = type), outlier.shape = NA)+stat_compare_means(aes(group = type), label = "p.format")+xlab("DE Gene Number")+theme.fig.box
plt.csd<-ggplot(df.box, aes(x = de_gene_num, y = CSD))+geom_boxplot(aes(fill = type), outlier.shape = NA)+stat_compare_means(aes(group = type), label = "p.format")+xlab("DE Gene Number")+theme.fig.box
plt.RS<-ggplot(df.box, aes(x = de_gene_num, y = RS))+geom_boxplot(aes(fill = type), outlier.shape = NA)+stat_compare_means(aes(group = type), label = "p.format")+xlab("DE Gene Number")+theme.fig.box
plot_grid(plt.csd,plt.RS, nrow = 2)
dev.off()
pdf("scRCD/Figure_4.pdf",width = 20,height = 12.5*(4/3))
plot_grid(plt.tsne.simu,plt.cas,plt.csd,plt.RS,nrow=4, labels=c("","E","F","G"))
dev.off()
###--------------------------------------------------------------------------------
dev.off()
pdf("manuscript_scCSD/Figure_3.pdf",width = 20,height = 12.5*(3/3))
plot_grid(plt.tsne.simu,plt.cas,plt.csd,nrow=3, labels=c("","E","F"))
dev.off()
###--------------------------------------------------------------------------------
plot(y=c(ano.scores.simu[[5]][group2.indic],ano.scores.simu[[5]][group1.indic]),x=c(dev.scores.simu[[5]][group2.indic],dev.scores.simu[[5]][group1.indic]))
plot(y=c(ano.scores.simu[[5]][group2.indic]),x=c(dev.scores.simu[[5]][group2.indic]))
points(y=c(ano.scores.simu[[5]][group2.indic]),x=c(FiRE.scores[[5]][group2.indic]),col = "red")

plot(y=c(ano.scores.simu[[1]][group2.indic]),x=c(dev.scores.simu[[1]][group2.indic]))
points(y=c(ano.scores.simu[[1]][group2.indic]),x=c(FiRE.scores[[1]][group2.indic]),col = "red")
