library(usethis)
library(devtools)
document()
use_package("ggplot2")
use_package("Rtsne")
?Rtsne::Rtsne
document()
document()
document()
use_mit_license()
load("scRCD/cell.type.marrow.rda")
load(marrow)
load("marrow.rda")
load(cell.type.marrow.rda)
load("cell.type.marrow.rda")
use_data(marrow)
use_data(cell.type.marrow)
use_readme_rmd()
library(ggplot2)
?guides
?ggplot2::rel
?rel
document()
library(scRAS)
?data
data("marrow")
data(marrow)
library(scRAS)
data(marrow)
data(cell.type.marrow)
feature<-prcomp(t(marrow))$x[,1:25]
## basic example code
gc()
View(feature)
View(marrow)
library(scRAS)
data(marrow)
data(cell.type.marrow)
pc<-prcomp(t(marrow))
feature <- pc$x[,1:25]
## basic example code
scores<-scores(feature.mat = feature)
head(scores)
scores<-scores(feature.mat = feature)
library(cowplot)
plts<-visualize(feature.mat = feature, scores = scores, cell.labels = cell.type.marrow)
plot_grid(plts$plt.label, plts$plt.CSD, plts$plt.CAS, labels = c("Cell Subtypes", "CSD","CAS"),ncol = 3)
document()
library(scRAS)
library(cowplot)
plts<-visualize(feature.mat = feature, scores = scores, cell.labels = cell.type.marrow)
plot_grid(plts$plt.label, plts$plt.CSD, plts$plt.CAS, labels = c("Cell Subtypes", "CSD","CAS"),ncol = 3)
library(cowplot)
plts<-visualize(feature.mat = feature, scores = scores, cell.labels = cell.type.marrow)
plot_grid(plts$plt.label, plts$plt.CSD, plts$plt.CAS, labels = c("Cell Subtypes", "CSD","CAS"),ncol = 3)
plts$plt.label
tsne<-Rtsne::Rtsne(feature.mat,pca = F)
tsne<-Rtsne::Rtsne(feature.mat = feature,pca = F)
tsne<-Rtsne::Rtsne(feature,pca = F)
df<-data.frame(tsne1 = tsne$Y[,1], tsne2 = tsne$Y[,2],
CAS = scores$CAS, CSD = scores$CSD,
labels = cell.labels)
cell.labels<-cell.type.marrow
df<-data.frame(tsne1 = tsne$Y[,1], tsne2 = tsne$Y[,2],
CAS = scores$CAS, CSD = scores$CSD,
labels = cell.labels)
plt1 <- ggplot(df, aes(x = tsne1, y = tsne2))+geom_point(aes(color = labels),size = size)
size = 0.25
plt1 <- ggplot(df, aes(x = tsne1, y = tsne2))+geom_point(aes(color = labels),size = size)
plt1
plt1 <- ggplot(df, aes(x = tsne1, y = tsne2))+geom_point(aes(color = cell_ontology_class),size = size)
plt1
document()
library(scRAS)
library(cowplot)
plts<-visualize(feature.mat = feature, scores = scores, cell.labels = cell.type.marrow)
plot_grid(plts$plt.label, plts$plt.CSD, plts$plt.CAS, labels = c("Cell Subtypes", "CSD","CAS"),ncol = 3)
plts$plt.label
plts$plt.CSD
document()
library(scRAS)
library(cowplot)
plts<-visualize(feature.mat = feature, scores = scores, cell.labels = cell.type.marrow)
plot_grid(plts$plt.label, plts$plt.CSD, plts$plt.CAS, labels = c("Cell Subtypes", "CSD","CAS"),ncol = 3)
library(cowplot)
plts<-visualize(feature.mat = feature, scores = scores, cell.labels = cell.type.marrow)
plot_grid(plts$plt.label, plts$plt.CSD, plts$plt.CAS, labels = c("Cell Subtypes", "CSD","CAS"))
library(cowplot)
plts<-visualize(feature.mat = feature, scores = scores, cell.labels = cell.type.marrow)
plot_grid(plts$plt.label, plts$plt.CSD, plts$plt.CAS, labels = c("Cell Subtypes", "CSD","CAS"),nrow = 3)
library(cowplot)
library(ggplot2)
plts<-visualize(feature.mat = feature, scores = scores, cell.labels = cell.type.marrow)
plts$plt.label+ggtitle("Visualization with Cell Subtypes")
plot_grid(plts$plt.CSD, plts$plt.CAS, labels=c("CSD","CAS"))
order(c(1,2,3,4),decreasing = decreasingt)
order(c(1,2,3,4),decreasing = T)
#' @param feature.mat a matrix containing the feature vectors for each cells, each row represents one feature
#' @param anchor.frac the fraction of anchor cells, 0.15 by default
#' @param n.cores threads called for computation, 1 by default
#' @param verbose logical, whether report the computation progress
#' @param K the number of the nearest neighbors in computing the CASs
#'
#' @return list, containing CSDs and CASs
#' @export
#'
#' @examples
scores<-function(feature.mat, anchor.frac = 0.15, n.cores = 1,verbose = T, K=30){
if(mode(feature.mat)=="list"){
feature.mat<-as.matrix(feature.mat)
}
#the index of uniformly sampled cells
uniform.sample.index<- sample(1:dim(feature.mat)[1],size = floor(anchor.frac*dim(feature.mat)[1]),replace = F)
#distance matrix between anchors and other cells
distance.cell2remain<-function(x,cell.num,red.dat){
as.matrix(sapply(1:cell.num, function(y){
if(x!=y){return(norm(as.matrix(red.dat[,x]-red.dat[,y]),"F"))}
else{return(0)}
}))
}
if(verbose == T){print("Constructing affinity matrix")}
# computing affinity matrix
H<-sapply(uniform.sample.index,function(x){
distance.cell2remain(x = x, red.dat = t(feature.mat), cell.num = dim(feature.mat)[1])
})
# computing CSD
if(verbose ==T){print("Computing the cell state deviations considering the distances from majority cells")}
norm.H<-diag(1/apply(H,1,sum))%*%H
W =norm.H%*%t(H)
L<-diag(apply(W,1,sum)) - W
scores<-sapply(1:dim(L)[1], function(x){L[x,x]})
scores<-(-1)*scores
scores<-(scores-min(scores))/(max(scores)-min(scores))
# computing CAS
if(verbose==T){print("Computing anomalous scores")}
# W = H%*%t(H)
W = norm.H%*%t(norm.H)
cell.specific.knearest.locs<-t(parallel::mcmapply(function(x){
return(order(W[x,],decreasing = T)[2:(K+1)])
}, 1:dim(feature.mat)[1], mc.cores = n.cores))
scores.knn<-parallel::mcmapply(function(x){
mean(scores[cell.specific.knearest.locs[x,]])
},1:length(scores),mc.cores = n.cores)
anomalous.scores<-abs(scores-scores.knn)
anomalous.scores<-(anomalous.scores-min(anomalous.scores))/(max(anomalous.scores)-min(anomalous.scores))
return(list(CSD = scores, CAS = anomalous.scores))
}
scores<-scores(feature.mat = feature)
library(cowplot)
library(ggplot2)
plts<-visualize(feature.mat = feature, scores = scores, cell.labels = cell.type.marrow)
plts$plt.label+ggtitle("Visualization with Cell Subtypes")
plot_grid(plts$plt.CSD, plts$plt.CAS, labels=c("CSD","CAS"))
scores<-scores(feature.mat = feature)
library(cowplot)
library(ggplot2)
plts<-visualize(feature.mat = feature, scores = scores, cell.labels = cell.type.marrow)
plts$plt.label+ggtitle("Visualization with Cell Subtypes")
plot_grid(plts$plt.CSD, plts$plt.CAS, labels=c("CSD","CAS"))
document()
library(scRAS)
scores<-scores(feature.mat = feature)
library(cowplot)
library(ggplot2)
plts<-visualize(feature.mat = feature, scores = scores, cell.labels = cell.type.marrow)
plts$plt.label+ggtitle("Visualization with Cell Subtypes")
plot_grid(plts$plt.CSD, plts$plt.CAS, labels=c("CSD","CAS"))
scores<-scores(feature.mat = feature)
library(cowplot)
library(ggplot2)
plts<-visualize(feature.mat = feature, scores = scores, cell.labels = cell.type.marrow)
plts$plt.label+ggtitle("Visualization with Cell Subtypes")
plot_grid(plts$plt.CSD, plts$plt.CAS, labels=c("CSD","CAS"))
plot_grid(plts$plt.CSD, plts$plt.CAS, labels=c("CSD","CAS"),nrow = 2)
plts$plt.label
